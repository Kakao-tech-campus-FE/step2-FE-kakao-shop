{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchProducts } from \"../../services/product\";\nimport { act } from \"react-dom/test-utils\";\nimport _ from \"lodash\";\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null,\n  // error exist : { message, status}\n  isEnd: false\n};\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.loading = true;\n    });\n    // Promise.resolve()\n    builder.addCase(getProducts.fulfilled, (state, action) => {\n      // action.payload.response는 최대 10개의 요소 있을 것\n      // 10개보다 작다면 더이상 데이터를 불러오는게 의미 없음\n      if (action.payload.response.length < 10) {\n        state.isEnd = true;\n      }\n      state.loading = false;\n      state.products.concat(action.payload.response);\n      state.products = _.uniqBy([...state.products, ...action.payload.response], 'id'); // { success, response, error}\n      const nextLength = state.products.length;\n      state.error = action.payload.error;\n    });\n    // Promise.reject()\n    builder.addCase(getProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.error;\n    });\n  }\n});\nexport const getProducts = createAsyncThunk(\"products/getProducts\", async page => {\n  const response = await fetchProducts(page);\n  return response.data; // action.payload\n\n  // success, response: [], error\n});\n\nexport default productsSlice.reducer;\n\n// 페이지 값에 따라 리턴 : 페이지네이트된 데이터","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchProducts","act","_","initialState","products","loading","error","isEnd","productsSlice","name","extraReducers","builder","addCase","getProducts","pending","state","action","fulfilled","payload","response","length","concat","uniqBy","nextLength","rejected","page","data","reducer"],"sources":["/Users/somingyeong/Documents/kakao/step2-FE-kakao-shop/step-2-week1/src/store/slices/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { fetchProducts } from \"../../services/product\";\nimport { act } from \"react-dom/test-utils\";\nimport _ from \"lodash\";\n\nconst initialState = {\n  products: [],\n  loading: false,\n  error: null, // error exist : { message, status}\n  isEnd: false,\n};\n\nconst productsSlice = createSlice({\n  name: \"products\",\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(getProducts.pending, (state, action) => {\n      state.loading = true;\n    });\n    // Promise.resolve()\n    builder.addCase(getProducts.fulfilled, (state, action) => {\n      \n      // action.payload.response는 최대 10개의 요소 있을 것\n      // 10개보다 작다면 더이상 데이터를 불러오는게 의미 없음\n      if (action.payload.response.length < 10) {\n        state.isEnd = true;\n      }\n\n      state.loading = false;\n      state.products.concat(action.payload.response);\n      state.products = _.uniqBy([...state.products, ...action.payload.response], 'id'); // { success, response, error}\n      const nextLength = state.products.length;\n      state.error = action.payload.error;\n    });\n    // Promise.reject()\n    builder.addCase(getProducts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload.error; \n    })\n  }\n});\n\nexport const getProducts = createAsyncThunk(\n  \"products/getProducts\",\n  async (page) => {\n    const response = await fetchProducts(page);\n    return response.data; // action.payload\n\n    // success, response: [], error\n  }\n);\n\nexport default productsSlice.reducer;\n\n// 페이지 값에 따라 리턴 : 페이지네이트된 데이터\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,GAAG,QAAQ,sBAAsB;AAC1C,OAAOC,CAAC,MAAM,QAAQ;AAEtB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EAAE;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,UAAU;EAChBN,YAAY;EACZO,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,WAAW,CAACC,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACV,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACF;IACAM,OAAO,CAACC,OAAO,CAACC,WAAW,CAACI,SAAS,EAAE,CAACF,KAAK,EAAEC,MAAM,KAAK;MAExD;MACA;MACA,IAAIA,MAAM,CAACE,OAAO,CAACC,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;QACvCL,KAAK,CAACR,KAAK,GAAG,IAAI;MACpB;MAEAQ,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,QAAQ,CAACiB,MAAM,CAACL,MAAM,CAACE,OAAO,CAACC,QAAQ,CAAC;MAC9CJ,KAAK,CAACX,QAAQ,GAAGF,CAAC,CAACoB,MAAM,CAAC,CAAC,GAAGP,KAAK,CAACX,QAAQ,EAAE,GAAGY,MAAM,CAACE,OAAO,CAACC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MAClF,MAAMI,UAAU,GAAGR,KAAK,CAACX,QAAQ,CAACgB,MAAM;MACxCL,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACE,OAAO,CAACZ,KAAK;IACpC,CAAC,CAAC;IACF;IACAK,OAAO,CAACC,OAAO,CAACC,WAAW,CAACW,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACvDD,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACE,OAAO,CAACZ,KAAK;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAMO,WAAW,GAAGd,gBAAgB,CACzC,sBAAsB,EACtB,MAAO0B,IAAI,IAAK;EACd,MAAMN,QAAQ,GAAG,MAAMnB,aAAa,CAACyB,IAAI,CAAC;EAC1C,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;;EAEtB;AACF,CACF,CAAC;;AAED,eAAelB,aAAa,CAACmB,OAAO;;AAEpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}